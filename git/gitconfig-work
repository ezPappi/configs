# Git config for work repos.

[alias]
	addremove = !git r && git add . --all
	aliases = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\ \t => \\2/' | sort
	all = add . --all
	amend = !git log -n 1 --pretty=tformat:%s%n%n%b | git commit -F - --amend
	br = branch -av
	brname = !git branch | grep "^*" | awk '{ print $2 }'
	brdel = branch -D
	ca = commit --all
	changes = "!f() { git log --pretty=format:'* %s' $1.$2; }; f"
	churn = !git log --all -M -C --name-only --format='format:' "$@" | sort | grep -v '^$' | uniq -c | sort | awk 'BEGIN {print "count,file"} {print $1 "," $2}'
	ci = commit
	co = checkout
	details = log -n1 -p --format=fuller
	df = diff
	dc = diff --cached
	dg = difftool --no-prompt	# diff graphical
	export = archive -o latest.tar.gz -9 --prefix=latest/
	g = !git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	ign = ls-files -o -i --exclude-standard		# Show files ignored by git:
	in = pull --dry-run
	l = "!f() { git log $* | grep '^commit ' | cut -f 2 -d ' '; }; f"
	lg = log -p
	lol = log --graph --decorate --pretty=oneline --abbrev-commit
	lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
	ls = ls-files
	out = log --branches --not --remotes
	r = !git ls-files -z --deleted | xargs -0 git rm
	root = rev-parse --show-toplevel
	s  = status --short
	st = status
	subup = submodule update --init
	tags = tag -l
	this = !git init && git add . && git commit -m \"Initial commit.\"
	trim = !git reflog expire --expire=now --all && git gc --prune=now
	unstage = reset HEAD --

[color]
        ui = auto

[color "branch"]
        current = yellow reverse
        local = yellow
        remote = green

[color "diff"]
        meta = yellow bold
        frag = magenta bold
        old = red bold
        new = green bold

[color "status"]
	added = yellow
	changed = green
	untracked = cyan
	whitespace = red reverse

[core]
	whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
	autocrlf = input
	editor = vim
	excludesfile = ~/.gitignore

[credential]
	helper = osxkeychain

[diff]
	mnemonicprefix = true

[fetch]
	prune = 1

[filter "lfs"]
	clean = git lfs clean %f
	smudge = git lfs smudge %f
	required = true

[merge]
	log = true
	ff = false

[push]
	default = tracking

[url "https://bitbucket.org/"]
	insteadOf = bb:

[url "https://github.com/"]
	insteadOf = gh:

[url "https://gist.github.com/"]
	insteadOf = gist:

[user]
        name = Marcin M. Jessa
        email = email@work.tld
